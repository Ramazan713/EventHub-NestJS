
interface IEvent {
    id: ID!
    title: String!
    price: Float!
    description: String!
    category: EventCategory!
    date: String!
    updatedAt: String!
    isOnline: Boolean!
    location: String
}


type EventInfo implements IEvent {
    id: ID!
    title: String!
    price: Float!
    description: String!
    category: EventCategory!
    date: String!
    updatedAt: String!
    isOnline: Boolean!
    location: String

    organizerId: Int!
    organizer: UserInfo!
}

type Event implements IEvent {
    id: ID!
    title: String!
    price: Float!
    description: String!
    category: EventCategory!
    date: String!
    updatedAt: String!
    isOnline: Boolean!
    location: String
  
    createdAt: String!
    isCancelled: Boolean!
    capacity: Int
    currentParticipants: Int!

    organizerId: Int!
    participants(input: PaginationInput): ParticipantConnection!
    organizer: Organizer!
    draft: DraftEvent
    tickets(input: PaginationInput): TicketConnection!
}


type Query {
    publicEvents(input: PublicEventsQueryInput): EventInfoConnection!
    publicEventById(id: Int!): EventInfo!
    eventTickets(eventId: ID!, input: EventTicketsQueryInput): TicketConnection!
}

type Mutation {
    cancelEvent(id: ID!): Event!
    registerEvent(id: ID!): Boolean!
    unregisterEvent(id: ID!): Boolean!
}

type EventInfoEdge {
    cursor: String!
    node: EventInfo!
}

type EventInfoConnection {
    edges: [EventInfoEdge!]!
    pageInfo: PageInfo!
}

type EventEdge {
    cursor: String!
    node: Event!
}

type EventConnection {
    edges: [EventEdge!]!
    pageInfo: PageInfo!
}

input PublicEventsQueryInput {
    q: String
    category: EventCategory
    isOnline: Boolean
    location: String
    dateFrom: Date
    dateTo: Date
    priceFrom: Float
    priceTo: Float
    sortBy: EventSortBy
    sortOrder: SortOrder

    first: Int
    last: Int
    after: String
    before: String

    organizerId: Int
}

input EventTicketsQueryInput {
    first: Int
    last: Int
    after: String
    before: String

    status: TicketStatus
    userId: Int
}

enum EventCategory {
    WORKSHOP
    SEMINAR
    CONCERT
    MEETUP
    WEBINAR
    OTHER
}