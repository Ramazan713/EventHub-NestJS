
type Organizer implements IUser {
    id: ID!
    email: String!
    name: String

    role: Role!

    createdEvents: [Event!]!
    registeredEvents: [EventInfo!]!
    draftEvents: [DraftEvent!]!
}

type Query {
    organizer: Organizer!
    createdEvents(input: OrganizerEventsQueryInput): [Event!]!
    organizerEventById(id: Int!): Event!
}

input OrganizerEventsQueryInput {
    q: String
    category: EventCategory
    isOnline: Boolean
    location: String
    dateFrom: Date
    dateTo: Date
    priceFrom: Float
    priceTo: Float
    sortBy: EventSortBy
    sortOrder: SortOrder

    first: Int
    last: Int
    after: String
    before: String

    isCancelled: Boolean
}